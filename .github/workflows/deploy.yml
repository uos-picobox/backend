name: PicoBox Backend CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: SCP JAR to EC2
        # main 브랜치 push 시에만 실행
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "build/libs/picobox-*.jar"
          target: "/home/${{ secrets.EC2_USERNAME }}/"
          overwrite: true

      - name: Execute deployment script on EC2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            set -e # 스크립트 실행 중 오류 발생 시 즉시 중단
            
            EC2_HOME_DIR="/home/${{ secrets.EC2_USERNAME }}"
            TARGET_JAR_NAME="app.jar"
            JAR_FILE_PATTERN="picobox-*.jar" 

            cd $EC2_HOME_DIR
            
            echo "Looking for JAR file matching pattern: $JAR_FILE_PATTERN in $(pwd)"
            
            # scp-action이 복사한 파일 중 -plain.jar가 아닌 최신 파일을 찾습니다.
            COPIED_JAR_NAME=$(ls -t $JAR_FILE_PATTERN | grep -v -- '-plain\.jar$' | head -n 1)

            if [ -z "$COPIED_JAR_NAME" ]; then
              echo "Error: No suitable JAR file found in $EC2_HOME_DIR matching pattern '$JAR_FILE_PATTERN' after SCP!"
              ALL_JARS_FOUND=$(ls -t *.jar | grep -v -- '-plain\.jar$' | head -n 1) # 혹시 패턴이 잘못되었을 경우를 대비한 일반적인 .jar 검색
              if [ -z "$ALL_JARS_FOUND" ]; then
                 echo "Error: No suitable JAR file found at all in $EC2_HOME_DIR!"
                 exit 1
              else
                 echo "Warning: Using generic *.jar pattern as fallback: $ALL_JARS_FOUND"
                 COPIED_JAR_NAME=$ALL_JARS_FOUND
              fi
            fi
            
            echo "Found JAR: $COPIED_JAR_NAME. Renaming it to $TARGET_JAR_NAME."
            rm -f $TARGET_JAR_NAME 
            mv "$COPIED_JAR_NAME" $TARGET_JAR_NAME 
            
            echo "Restarting picobox-backend service on EC2..."
            sudo systemctl restart picobox-backend.service
            
            echo "Service restart command executed. Waiting for service to come up..."
            sleep 20 
            
            echo "Checking service status..."
            sudo systemctl status picobox-backend.service || echo "Service status check indicated an issue or service is not fully up yet."
            
            echo "Tailing application log (last 50 lines)..."
            tail -n 50 /home/ec2-user/app.log || echo "app.log not found or empty."