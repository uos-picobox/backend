name: PicoBox Backend CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: SCP JAR to EC2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "build/libs/picobox-*.jar"
          target: "/home/${{ secrets.EC2_USERNAME }}/"
          overwrite: true

      - name: Execute deployment script on EC2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            set -e # 오류 발생 시 즉시 스크립트 중단

            EC2_HOME_DIR="/home/${{ secrets.EC2_USERNAME }}"
            JAR_SOURCE_DIR_ON_EC2="$EC2_HOME_DIR/build/libs" 
            FINAL_TARGET_JAR_PATH="$EC2_HOME_DIR/app.jar"
            JAR_FILE_PATTERN="picobox-*.jar"

            echo "--- Navigating to JAR directory on EC2: $JAR_SOURCE_DIR_ON_EC2 ---"
            cd "$JAR_SOURCE_DIR_ON_EC2"
            
            echo "--- Locating JAR file (pattern: $JAR_FILE_PATTERN) ---"
            COPIED_JAR_NAME=$(ls -t $JAR_FILE_PATTERN 2>/dev/null | grep -v -- '-plain\.jar$' | head -n 1)

            if [ -z "$COPIED_JAR_NAME" ]; then
              echo "Error: JAR file matching '$JAR_FILE_PATTERN' not found in $JAR_SOURCE_DIR_ON_EC2."
              COPIED_JAR_NAME=$(ls -t *.jar 2>/dev/null | grep -v -- '-plain\.jar$' | head -n 1)
              if [ -z "$COPIED_JAR_NAME" ]; then
                echo "Error: No suitable .jar file found in $JAR_SOURCE_DIR_ON_EC2 at all."
                ls -la
                exit 1
              else
                echo "Warning: Found JAR using fallback pattern in $JAR_SOURCE_DIR_ON_EC2: $COPIED_JAR_NAME"
              fi
            fi
            
            echo "--- Moving $COPIED_JAR_NAME to $FINAL_TARGET_JAR_PATH ---"
            mv "$COPIED_JAR_NAME" "$FINAL_TARGET_JAR_PATH"

            echo "--- Restarting picobox-backend service ---"
            sudo systemctl restart picobox-backend.service
            
            echo "--- Waiting for service to start (20 seconds) ---"
            sleep 20 # 서비스가 완전히 시작될 때까지 대기
            
            echo "--- Checking picobox-backend service status ---"
            sudo systemctl status picobox-backend.service || true 
            
            echo "--- Tailing application log (last 30 lines) ---"
            tail -n 30 "$EC2_HOME_DIR/app.log" || true